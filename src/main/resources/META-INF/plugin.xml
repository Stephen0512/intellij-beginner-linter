<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>uk.ac.ed.inf.easycode-beginner-linter</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>EasyCode Beginner Linter</name>

    <version>1.0-SNAPSHOT</version>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="s2023501@ed.ac.uk" url="https://www.ed.ac.uk">The University of Edinburgh</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description>
        <![CDATA[
        <p>Welcome to EasyCode Beginner Linter, the plugin designed with the beginner's background in mind! This plugin
        improves the coding experience of programming beginners by filtering out the overwhelming warnings produced by
        IntelliJ IDE with ones that are more suitable to them. This tool makes it easier for those who are just
        starting out with programming to understand and debug their code.</p>
        <p><strong>Features include:</strong></p>
        <ul>
            <li>A control panel that allows learners to filter out meaningless inspections based on their progress.</li>
            <li>Customized inspections for learners to better meet the expectations of their assignments.</li>
            <li>An easy-to-click option for importing predefined settings files distributed by instructors.</li>
        </ul>
        <p>IntelliJ EasyCode Beginner Linter helps you focus on learning the fundamentals of Java without getting
        overwhelmed by the complexity of the IntelliJ IDE â€“ Try EasyCode Beginner Linter today!</p>
        <p>This plugin was designed and developed as part of the informatics honors project for a B.Eng. degree
        in Electronics and Computer Science at the University of Edinburgh.</p>
        ]]>
    </description>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.java</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <localInspection language="JAVA"
                         displayName="Method length inspection"
                         shortName="MethodLengthInspection"
                         groupPath="Beginner-friendly inspections"
                         groupName="Custom inspections"
                         enabledByDefault="false"
                         level="WARNING"
                         implementationClass="uk.ac.ed.inf.intellijbeginnerlinter.MethodLengthInspection"
        />

        <localInspection language="JAVA"
                         displayName="'if' statement usage inspection"
                         shortName="IfStatementUsageInspection"
                         groupPath="Beginner-friendly inspections"
                         groupName="Custom inspections"
                         enabledByDefault="false"
                         level="WARNING"
                         implementationClass="uk.ac.ed.inf.intellijbeginnerlinter.controlstructinspects.IfStatementUsageInspection"
        />

        <localInspection language="JAVA"
                         displayName="'while' loop usage inspection"
                         shortName="WhileLoopUsageInspection"
                         groupPath="Beginner-friendly inspections"
                         groupName="Custom inspections"
                         enabledByDefault="false"
                         level="WARNING"
                         implementationClass="uk.ac.ed.inf.intellijbeginnerlinter.controlstructinspects.WhileLoopUsageInspection"
        />

        <localInspection language="JAVA"
                         displayName="'for' loop usage inspection"
                         shortName="ForLoopUsageInspection"
                         groupPath="Beginner-friendly inspections"
                         groupName="Custom inspections"
                         enabledByDefault="false"
                         level="WARNING"
                         implementationClass="uk.ac.ed.inf.intellijbeginnerlinter.controlstructinspects.ForLoopUsageInspection"
        />

        <localInspection language="JAVA"
                         displayName="enhanced 'for' loop usage inspection"
                         shortName="ForeachLoopUsageInspection"
                         groupPath="Beginner-friendly inspections"
                         groupName="Custom inspections"
                         enabledByDefault="false"
                         level="WARNING"
                         implementationClass="uk.ac.ed.inf.intellijbeginnerlinter.controlstructinspects.ForeachLoopUsageInspection"
        />

        <localInspection language="JAVA"
                         displayName="'switch' statement usage inspection"
                         shortName="SwitchStatementUsageInspection"
                         groupPath="Beginner-friendly inspections"
                         groupName="Custom inspections"
                         enabledByDefault="false"
                         level="WARNING"
                         implementationClass="uk.ac.ed.inf.intellijbeginnerlinter.controlstructinspects.SwitchStatementUsageInspection"
        />

        <projectConfigurable displayName="EasyCode Linter Panel"
                             instance="uk.ac.ed.inf.intellijbeginnerlinter.ControlPanel"/>
    </extensions>
</idea-plugin>